

service: escamedmobileapi # NOTE: update this with your service type

provider:
  name: aws
  useNestedStacks: true
  useOpenApi: true
  runtime: python2.7
  region: eu-central-1
  memorysize: 128
  stage: expo
  timeout: 6


#  vpc:
#      securityGroupIds:
#        - sg-9b4835f0
#      subnetIds:
#        - subnet-2feceb65


  iamRoleStatements: # IAM role statements so that services can be accessed in the AWS account
    - Effect: 'Allow'
      Action:
        - "dynamodb:*"
      Resource:
        - "arn:aws:dynamodb:eu-central-1:531284228182:table/*"
    - Effect: 'Allow'
      Action:
        - "ec2:DescribeNetworkInterfaces"
        - "ec2:CreateNetworkInterface"
        - "ec2:DeleteNetworkInterface"
        - "ec2:DetachNetworkInterface"
      Resource:
        - "*"
    - Effect: 'Allow'
      Action:
        - "lambda:*"
      Resource:
        - "arn:aws:lambda:eu-central-1:531284228182:function:*"
    - Effect: 'Allow'
      Action:
        - "cognito-sync:*"
      Resource:
        - "*"
    - Effect: 'Allow'
      Action:
        - "cognito-identity:*"
      Resource:
        - "*"
#    - Effect: 'Allow'
#      Action:
#        - "cognito"
#    - Effect: 'Allow'
#      Action:
#        - "execute-api:Invoke"
#      Resource: "arn:aws:execute-api:eu-central-1:*:*"



package:
  exclude:
    - pulp/solverdir/cbc/win/**
    - pulp/solverdir/cbc/osx/**

functions:
  generate:
    handler: handlers.generate
    memorySize: 1536
    timeout: 300
    events:
      - http:
          path: generate
          method: POST
          integration: lambda

  regenerate:
    handler: handlers.regenerate
    memorysize: 512
    timeout: 30
    events:
      - http:
          path: func/regenerate
          method: POST
          integration: lambda
          authorizer:
            type: aws_iam
          cors: true

  generate_for_next_week:
    handler: handlers.generate_for_next_week
    events:
      - schedule:
          rate: cron(0 10 ? * FRI *)
          enabled: false


  post_plan:
    handler: handlers.post_plan
    events:
      - http:
          path: post_plan
          method: POST
          integration: lambda
          authorizer:
            type: aws_iam
          cors: true


  scan_bls:
    handler: mobileapi.scan_bls
    events:
      - http:
          path: post/scan_bls
          method: POST
          integration: lambda
          authorizer:
            type: aws_iam
          cors: true


  reset_all_user_nutrients:
    handler: handlers.reset_all_user_nutrients
    memorySize: 128
    description: deletes all userNutrition datasets for all users every night at XXX o'clock
    events:
      - schedule:
          rate: cron(0 0 * * ? *)
          enabled: true

#  test_ddb_stream:
#    handler: catchstream.test_ddb_stream
#    description: detects new user sign up and invokes generate
#    memorySize: 128
#    events:
#      - stream:
#          type: dynamodb
#          arn: arn:aws:dynamodb:eu-central-1:531284228182:table/UserDataTable/stream/2017-08-19T17:55:32.810

  invoke_generate_from_mobile_device:
    handler: handlers.invoke_generate_from_mobile_device
    description: invokes generate, used after sign up and in case no plan
    memorySize: 128
    timeout: 300
    events:
      - http:
          path: func/invoke_generate_from_mobile_device
          method: POST
          integration: lambda
          cors: true
          authorizer:
            type: aws_iam

  kadia_content:
    handler: mobileapi.get_kadia_content
    events:
      - http:
          path: get/kadia_content
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true


  blood_pressure:
    handler: mobileapi.blood_pressure_for_week
    events:
      - http:
          path: over_view/blood_pressure
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  blood_pressure_input_check:
    handler: mobileapi.blood_pressure_input_check
    events:
      - http:
          path: get/dashboard/blood_pressure/inputs_filled
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  weight:
    handler: mobileapi.weight_for_week
    events:
      - http:
          path: overview/weight
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  grocery:
    handler: mobileapi.grocery_url
    events:
      - http:
          path: post/grocery
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  create_shopping_list:
    handler: mobileapi.create_shopping_list
    events:
      - http:
          path: shopping_list/create
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  shopping_list:
    handler: mobileapi.shopping_list
    events:
      - http:
          path: shopping_list/get
          method: GET
          authorizer: aws_iam
          integration: lambda
          cors: true

  check_item:
    handler: mobileapi.check_item
    events:
      - http:
          path: shopping_list/check_item
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  meal_eaten:
    handler: mobileapi.meal_eaten
    events:
      - http:
          path: post/meal_plan/meal_eaten
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  percentage:
    handler: mobileapi.percentage
    events:
      - http:
          path: get/dashboard/percentage
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true


  like_meal:
    handler: mobileapi.like_meal
    events:
      - http:
          path: post/meal_plan/like_meal
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  dislike_meal:
    handler: mobileapi.dislike_meal
    events:
      - http:
          path: post/meal_plan/dislike_meal
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  is_like_or_disliked:
    handler: mobileapi.dislike_meal
    events:
      - http:
          path: post/meal_plan/is_liked_or_disliked
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true


  measure_blood_pressure:
    handler: mobileapi.measure_blood_pressure
    events:
      - http:
          path: post/measure/blood_pressure
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  measure_weight:
    handler: mobileapi.measure_weight
    events:
      - http:
          path: post/measure/weight
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  hints:
    handler: mobileapi.hints
    events:
      - http:
          path: get/dashboard/hints
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true

  get_whole_item:
    handler: mobileapi.get_whole_item
    events:
      - http:
          path: get/get_whole_item
          method: POST
          authorizer: aws_iam
          integration: lambda
          cors: true


